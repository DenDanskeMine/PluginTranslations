#
# Official Language File
# To make your own language file, copy this file and edit the copy
#
# Changes made to this file will be reset!
# Do not edit it!
#

# AmountSelectorView.addRemoveButton.add.name.amount: "to amount"
# AmountSelectorView.addRemoveButton.lore: "Click to %action% more"
# AmountSelectorView.addRemoveButton.lore.add: "add"
# AmountSelectorView.addRemoveButton.lore.remove: "remove"
# AmountSelectorView.addRemoveButton.name.add: "Add"
# AmountSelectorView.addRemoveButton.name.remove: "Remove"
# AmountSelectorView.addRemoveButton.remove.name.amount: "from amount"
# AmountSelectorView.addRemoveMaxButton.name.lore: "Click to %action% everything"
# AmountSelectorView.confirmButton.emeraldBlock: "Confirm"
# AmountSelectorView.confirmButton.emeraldBlock.lore.selectedAmount: "Selected Amount: %amount%"
# AmountSelectorView.confirmButton.redstoneBlock.name: "No selected Amount"
# AmountSelectorView.typeInButton.lore: "Click to type in an exact amount"
# AmountSelectorView.typeInButton.lore.maxValue: "Max Value: %value%"
# AmountSelectorView.typeInButton.name: "Type in Amount"
# AmountSelectorView.typeInButton.userInput.actionBar: "Ex. **25** or **64**"
# AmountSelectorView.typeInButton.userInput.title.sub: "Type in to set amount"
# ancelVanillaBehavior.event: "Event"
# ancelVanillaBehavior.name: "Block Vanilla Behaviour"
# andomNumber.desc1: "Will generate a random number"
# andomNumber.desc2: "with minimum and maximum"
# andomNumber.maximum: "Maximum"
# andomNumber.minimum: "Minimum"
# andomNumber.name: "Random Number"
# andomNumber.randomNumber: "Random Number"
# ariableCreator.leftClick: "**Left Click** to exit editor"
# ariableCreator.message: "**Message**"
# ariableCreator.quitEditor: "**Quit Editor**"
# ariableCreator.scroll: "Scroll to **move** cursor | Shift + Scroll to **select**"
# ariableList.addVariable: "Add Variable"
# ariableList.addVariableLore: "Click to add Variable"
# ariableList.inputVariableSubTitle: "Type in a name of the variable"
# ariableList.inputVariableTitle: "**Variable**"
# ariableList.lorePlaceholder: "Placeholder"
# ariableList.loreRemove: "Click to **remove**"
# aterialSpecification.description: "Select a Material from the List"
# aterialSpecification.title: "Select Material"
# ButtonStackEditor.button.lore.click: "**Left Click** to **delete** this item from the stack"
# ButtonStackEditor.reorder.action: "Click to modify the order"
# ButtonStackEditor.reorder.title: "Change Order"
# ButtonStackEditView.guiTitle: "Button Stack Editor"
# ButtonStackReorderView.entry.deselectAction: "**Left Click** to **deselect** this interfaceItem"
# ButtonStackReorderView.entry.grabAction: "**Left Click** to **grab** this interfaceItem"
# ButtonStackReorderView.entry.swapAction: "**Left Click** to swap with **%interfaceItem%**"
# ButtonStackReorderView.title: "InterfaceItem Sorting"
# ChooseElement.lore.requiredPlugin: "Required Plugin: **%plugin%**"
# ChooseElement.lore.usedAddon: "Used Addon: **%addon%**"
# craftingRecipe.desc1: "Will be executed whenever a player"
# craftingRecipe.desc2: "crafts a specific custom recipe"
# craftingRecipe.event: "Event"
# craftingRecipe.name: "Crafting Custom Recipe"
# craftingRecipe.player: "Player"
# craftingRecipe.recipe: "Recipe"
# CraftingRecipeBuildView..notAValidNumber: "Not a valid number"
# CraftingRecipeBuildView.amount: "Amount"
# CraftingRecipeBuildView.import.desc1: "**Click** any item of your player"
# CraftingRecipeBuildView.import.desc2: "inventory to **import** it"
# CraftingRecipeBuildView.ingredientButton.action.customModelId.customModelId: "Custom Model ID"
# CraftingRecipeBuildView.ingredientButton.action.customModelId.title.sub: "Type in custom model id"
# CraftingRecipeBuildView.ingredientButton.action.example: "Example: **0** or **215**"
# CraftingRecipeBuildView.ingredientButton.action.materialPicker.title: "Ingredient > Material"
# CraftingRecipeBuildView.ingredientButton.durability.title.sub: "Type in durability value"
# CraftingRecipeBuildView.ingredientButton.lore.durability: "Durability"
# CraftingRecipeBuildView.ingredientButton.lore.leftClick: "**Left Click** to select material"
# CraftingRecipeBuildView.ingredientButton.lore.middleClick: "**Middle Click** to change required amount"
# CraftingRecipeBuildView.ingredientButton.lore.pressQ: "**Press Q** to reset this ingredient"
# CraftingRecipeBuildView.ingredientButton.lore.rightClick: "**Right Click** to change damage value"
# CraftingRecipeBuildView.ingredientButton.lore.shiftLeftClick: "**Shift + Left Click** to import item from your inventory"
# CraftingRecipeBuildView.ingredientButton.lore.shiftRightClick: "**Shift + Right Click** to change custom model data"
# CraftingRecipeBuildView.ingredientButton.name: "Ingredient"
# CraftingRecipeBuildView.resultButton.action.customModelId.customModelId: "Custom Model ID"
# CraftingRecipeBuildView.resultButton.action.customModelId.title.sub: "Type in custom model id"
# CraftingRecipeBuildView.resultButton.action.example: "Example: **0** or **215**"
# CraftingRecipeBuildView.resultButton.action.leftClick.title: "Result > Material"
# CraftingRecipeBuildView.resultButton.durability.title.sub: "Type in durability value"
# CraftingRecipeBuildView.resultButton.lore.durability: "Durability"
# CraftingRecipeBuildView.resultButton.lore.leftClick: "**Left Click** to select material"
# CraftingRecipeBuildView.resultButton.lore.middleClick: "**Middle Click** to change the getting amount"
# CraftingRecipeBuildView.resultButton.lore.pressQ: "**Press Q** to **create** this recipe"
# CraftingRecipeBuildView.resultButton.lore.rightClick: "**Right Click** to change damage value"
# CraftingRecipeBuildView.resultButton.lore.shiftLeftClick: "**Shift + Left Click** to import item from your inventory"
# CraftingRecipeBuildView.resultButton.lore.shiftRightClick: "**Shift + Right Click** to change custom model data"
# CraftingRecipeBuildView.resultButton.name: "Result Item"
# CraftingRecipeBuildView.selectedForImport: "Selected for import"
# CraftingRecipeListView.button.confirmDeletion: "Confirm deletion of"
# CraftingRecipeListView.button.lore.leftClick: "**Left Click** to edit crafting recipe"
# CraftingRecipeListView.button.lore.none: "None"
# CraftingRecipeListView.button.lore.permission: "Permission"
# CraftingRecipeListView.button.lore.pressQ: "**Press Q** to **delete**"
# CraftingRecipeListView.button.lore.rightClick: "**Right Click** to set new permission"
# CraftingRecipeListView.button.lore.shiftLeftClick: "**Shift + Left Click** to rename"
# CraftingRecipeListView.button.lore.shiftRightClick: "**Shift + Right Click** to %action% crafting recipe"
# CraftingRecipeListView.button.lore.status: "Status"
# CraftingRecipeListView.button.permission.actionbar: "Type **none** to reset permission"
# CraftingRecipeListView.button.permission.title.main: "Recipe Permission"
# CraftingRecipeListView.button.permission.title.sub: "Type in a new permission"
# CraftingRecipeListView.button.rename.title.main: "Rename Crafting Recipe"
# CraftingRecipeListView.button.rename.title.sub: "Type in a new name"
# CraftingRecipeListView.createRecipe.button: "Create"
# CraftingRecipeListView.createRecipe.lore: "Click to create new Crafting Recipe"
# CraftingRecipeListView.createRecipe.title.main: "**Crafting Recipe Name** **(1/2)**"
# CraftingRecipeListView.createRecipe.title.sub: "Type in the name of the Crafting Recipe"
# CraftingRecipeListView.guiTitle: "Crafting Recipes"
# CraftingRecipePickerView.lore: "Click to **select**"
# CraftingRecipePickerView.title: "Crafting Recipe Selector"
# CraftingRecipeSpecification.description: "Select a Material from the List"
# criptBrowser.button.element.delete: "Confirm deletion of '%scriptName%'"
# criptBrowser.button.element.lore.elements: "with **%amount%** Elements"
# criptBrowser.button.element.lore.leftClick: "**Left Click** to show Script"
# criptBrowser.button.element.lore.pressQ: "**Press Q** to **delete**"
# criptBrowser.button.lore.click: "Click to **delete**"
# criptBrowser.button.lore.desc1: "This Script can no longer be accessed"
# criptBrowser.button.lore.desc2: "due to removal of this Element."
# criptBrowser.button.lore.internalName: "Internal Name:"
# criptBrowser.model.choose.title.main: "Create Script"
# criptBrowser.model.choose.title.sub: "Type in a name"
# criptBrowser.model.click: "Click to create new Script"
# criptBrowser.model.name: "Add"
# criptBrowser.model.title: "Script > Choose Constructor"
# criptBrowser.title: "%folderName% > Scripts"
# criptCommandListView.action.pressQ.confirmDeletion: "Confirm deletion of /'%commandName%'"
# criptCommandListView.gui.title: "Commands"
# criptCommandListView.lore.elements: "Elements:"
# criptCommandListView.lore.leftClick: "**Left Click** to show Script"
# criptCommandListView.lore.pressQ: "**Press Q** to **delete**"
# criptCommandListView.model.input.title.main: "Command"
# criptCommandListView.model.input.title.sub: "Type in the Command"
# criptCommandListView.model.lore.click: "Click to create Command"
# criptCommandListView.model.name: "Create Command"
# criptEditor.addButton.choose.title: "Script > Add Element"
# criptEditor.addButton.lore: "**Left Click** to add Element"
# criptEditor.addButton.name: "Add"
# criptEditor.connectionButton.choose.title: "Script > Insert Element"
# criptEditor.connectionButton.lore.leftClick: "**Left Click** to scroll"
# criptEditor.connectionButton.lore.rightClick: "**Right Click** to insert an element here"
# criptEditor.elementButton.lore.leftClick: "**Left Click** to edit"
# criptEditor.elementButton.lore.pressQ: "**Press Q** to **delete**"
# criptEditor.notNull.first: "Could not open the Script **%scriptName%**"
# criptEditor.notNull.second: "Following Elements could no longer be found:"
# criptEditor.null.first: "Could not open the Script..."
# criptEditor.null.second: "The script could not be found!"
# criptEditor.title: "Script > %scriptName%"
# criptEditor.wireButton.lore: "**Left Click** to scroll"
# ddonsMarketplaceListView.button.lore.addon.install: "Click to **install** this addon"
# ddonsMarketplaceListView.button.lore.addon.installed: "This addon is **installed**"
# ddonsMarketplaceListView.button.lore.addon.update: "Click to **update** this addon"
# ddonsMarketplaceListView.button.lore.creator: "Creator: **%creatorName%**"
# ddonsMarketplaceListView.button.lore.description: "Description:"
# ddonsMarketplaceListView.button.lore.downloads: "Downloads: **%amount%**"
# ddonsMarketplaceListView.gui.title: "Addons > Marketplace"
# ddonsMarketplaceListView.loading: "Loading..."
# ddonsOverview.gui.title: "Overview > Addons"
# ddonsOverview.installedAddonsButton.lore.amount: "Amount: **%amount%**"
# ddonsOverview.installedAddonsButton.lore.click: "Click to view **installed Addons**"
# ddonsOverview.installedAddonsButton.lore.description.line1: "View, edit, and remove all installed addons."
# ddonsOverview.installedAddonsButton.lore.description.line2: "Don't want an addon anymore? Then delete it!"
# ddonsOverview.installedAddonsButton.name: "Installed"
# ddonsOverview.marketplaceButton.lore.description.line1: "Our Marketplace provides you"
# ddonsOverview.marketplaceButton.lore.description.line2: "with various addons that are"
# ddonsOverview.marketplaceButton.lore.description.line3: "downloadable with just one click!"
# ddonsOverview.marketplaceButton.lore.marketplace.offline: "Our Marketplace is currently **unavailable**"
# ddonsOverview.marketplaceButton.lore.marketplace.online: "Click to browse our **marketplace**"
# ddonsOverview.marketplaceButton.name: "Marketplace"
# efaultChild.getDescription: "The action below will be executed next"
# efaultChild.name: "Next Action"
# elay.desc1: "Will wait for a specific"
# elay.desc2: "time before continuing with"
# elay.desc3: "the next elements"
# elay.name: "Delay"
# elay.time: "Time"
# epeating.delay: "Delay"
# epeating.desc1: "Will repeatedly execute"
# epeating.desc2: "after a specific delay"
# epeating.name: "Repeating"
# eperateClickTypes.clickType: "Click Type"
# eperateClickTypes.leftClick: "Left Click"
# eperateClickTypes.leftClick.desc1: "Will be executed if the left"
# eperateClickTypes.leftClick.desc2: "mouse button has been pressed"
# eperateClickTypes.name: "Seperate Click Types"
# eperateClickTypes.rightClick: "Right Click"
# eperateClickTypes.rightClick.desc1: "Will be executed if the right"
# eperateClickTypes.rightClick.desc2: "mouse button has been pressed"
# essageBrowser.addMessage: "Add Message"
# essageBrowser.clickMessage: "Click to select"
# essageBrowser.confirmDelete: "Confirm deletion of this Message"
# essageBrowser.delete: "**Press Q** to **delete**"
# essageBrowser.editedMessage: "Edited Message:"
# essageBrowser.leftClick: "**Left Click** to view Settings"
# essageBrowser.none: "None:"
# essageBrowser.titleMessage: "Messages"
# essageBrowser.variables: "Variables:"
# essagePicker.getTitle: "Select Message from History"
# essagePicker.lore: "Click to select"
# essageView.actionButton.action: "an Action Bar"
# essageView.actionButton.add: "**add**"
# essageView.actionButton.clickTo: "Click to"
# essageView.actionButton.inputLore: "Type in the line"
# essageView.actionButton.inputTitle: "**Action Bar**"
# essageView.actionButton.lore: "Action Bar"
# essageView.actionButton.remove: "**remove**"
# essageView.actionButton.title: "Action Bar"
# essageView.editMessage.lore.editedMessage: "Edited Message"
# essageView.editMessage.lore.editMessage: "Click to **edit** Message"
# essageView.editMessage.lore.removeMessage: "Click to **remove**"
# essageView.editMessage.newMessage: "New Message"
# essageView.editMessage.originalMessage: "Original Message"
# essageView.editMessage.title: "Edit Message"
# essageView.editMessage.typeNewMessage: "Type in a new message"
# essageView.messageText.clickCopy: "**Click** to copy into Chat"
# essageView.messageText.copyButton: "(**Copy**)"
# essageView.titleButton.bottomLine.lore: "Type in a new line"
# essageView.titleButton.bottomLine.title: "**Title** (Bottom Line)"
# essageView.titleButton.leftClick: "**Left Click** to"
# essageView.titleButton.leftClick.add: "**add**"
# essageView.titleButton.leftClick.remove: "**remove**"
# essageView.titleButton.leftClick.title: "Main Title"
# essageView.titleButton.rightClick: "**Right Click** to"
# essageView.titleButton.rightClick.add: "**add**"
# essageView.titleButton.rightClick.remove: "**remove**"
# essageView.titleButton.rightClick.title: "Sub Title"
# essageView.titleButton.title: "Title"
# essageView.titleButton.titleLore: "Title:"
# essageView.titleButton.topLine.lore: "Type in a new line"
# essageView.titleButton.topLine.title: "**Title** (Top Line)"
# essageView.variable.button.none: "None"
# essageView.variable.buttonLore.desc1: "Variables"
# essageView.variable.buttonLore.desc2: "Click to edit Variables"
# essageView.variable.buttonTitle: "Variables"
# essageView.variableTitle: "Available Variables"
# essageView.visibilityButton.clickTo: "Click to"
# essageView.visibilityButton.hidden: "Hidden"
# essageView.visibilityButton.hide: "hide"
# essageView.visibilityButton.message: "message"
# essageView.visibilityButton.show: "show"
# essageView.visibilityButton.shown: "Shown"
# essThan.desc1: "Returns true or false depending"
# essThan.desc2: "if the num 2 is less than num 1"
# essThan.desc3: "Num1 > Num2"
# essThan.false: "False"
# essThan.false.desc1: "Will be executed if num 2"
# essThan.false.desc2: "is not less than num 1"
# essThan.name: "Less Than"
# essThan.number1: "Number 1"
# essThan.number2: "Number 2"
# essThan.true: "True"
# essThan.true.desc1: "Will be executed if num 2"
# essThan.true.desc2: "is less than num 1"
# essThanOrEqualTo.desc1: "Returns true or false depending"
# essThanOrEqualTo.desc2: "if the value is less than or equal to"
# essThanOrEqualTo.desc3: "Num1 <= Num2"
# essThanOrEqualTo.false: "False"
# essThanOrEqualTo.false.desc1: "Will be executed if num 2"
# essThanOrEqualTo.false.desc2: "equal to num 1"
# essThanOrEqualTo.false.desc2: "is not less than or"
# essThanOrEqualTo.name: "Less Than or Equal To"
# essThanOrEqualTo.number1: "Number 1"
# essThanOrEqualTo.number2: "Number 2"
# essThanOrEqualTo.true: "True"
# essThanOrEqualTo.true.desc1: "Will be executed if num 2"
# essThanOrEqualTo.true.desc2: "is less than or"
# essThanOrEqualTo.true.desc3: "equal to num 1"
# etPAPIPlaceholder.desc1: "Get Placeholder API Placeholder"
# etPAPIPlaceholder.desc2: "from a specific player"
# etPAPIPlaceholder.name: "Get Placeholder"
# etPAPIPlaceholder.player: "Player"
# etPAPIPlaceholder.replacedString: "Replaced String"
# etPAPIPlaceholder.unreplacedString: "Unreplaced String"
# etPlayerFromName.desc1: "Retrieve a player from a name"
# etPlayerFromName.desc2: "You will then be able to combine it"
# etPlayerFromName.desc3: "with other Player related Actions"
# etPlayerFromName.name: "Get Player from Name"
# etPlayerFromName.player: "Player"
# etPlayerFromName.playerName: "Player Name"
# etPlayerName.desc: "Retrieve the In-Game name of a player"
# etPlayerName.name: "Get Player Name"
# etPlayerName.player: "Player"
# etPlayerName.playerName: "Player Name"
# etPlayerUUID.desc: "Retrieve the UUID of a player"
# etPlayerUUID.name: "Get Player UUID"
# etPlayerUUID.player: "Player"
# etPlayerUUID.uuid: "UUID"
# fElseStatement.checkedStatement: "Checked Statement"
# fElseStatement.desc1: "Checks the statement and will"
# fElseStatement.desc2: "execute the according action"
# fElseStatement.failing: "Failing"
# fElseStatement.false.desc: "Will be executed if this Statement is false"
# fElseStatement.name: "If Else Statement"
# fElseStatement.passing: "Passing"
# fElseStatement.true.desc: "Will be executed if this Statement is true"
# fflinePlayerPicker.lore: "Click to select"
# fflinePlayerSelector.chooser: "Chooser"
# fflinePlayerSelector.desc1: "Will open a GUI with all"
# fflinePlayerSelector.desc2: "known offline and online players"
# fflinePlayerSelector.guiTitle: "GUI Title"
# fflinePlayerSelector.name: "Offline Player Selector"
# fflinePlayerSelector.selectedPlayerName: "Selected Player Name"
# FolderOptionsView.dependenciesButton.action.title.main: "New Folder Dependencies"
# FolderOptionsView.dependenciesButton.action.title.sub: "Type in folder dependencies (**e.g Variables & InventoryUtils Addon**)"
# FolderOptionsView.dependenciesButton.desc1: "Describe the dependencies of your Folder"
# FolderOptionsView.dependenciesButton.desc2: "for being able to use it properly. (e.g required Addons)"
# FolderOptionsView.dependenciesButton.lore.click: "**Left Click** to **describe** dependencies"
# FolderOptionsView.dependenciesButton.lore.currentDependencies: "Dependencies of this Folder"
# FolderOptionsView.dependenciesButton.lore.dependenciesNotDefined: "Not defined"
# FolderOptionsView.dependenciesButton.name: "Dependencies"
# FolderOptionsView.dependenciesButton.pressQ: "**Press Q** to **reset** dependencies"
# GlobalInterfaceChooser.lore: "Click to **select**"
# GlobalInterfaceChooser.title: "GUI (From All Folders)"
# GlobalInterfaceSpecification.description: "Select from in all Folders created GUI's"
# GlobalInterfaceSpecification.title: "Select GUI"
# GUIButtonClick.execute.cooldown: "You have to wait **%time%** before you can perform this action again"
# hooseConstructor.lore.click: "Click to select"
# hooseConstructor.lore.variables: "Variables:"
# hooseElement.lore.arguments: "Arguments:"
# hooseElement.lore.createdVariables: "Created Variables"
# hooseElement.lore.isCompatible: "Click to select"
# hooseElement.lore.isNotCompatible: "This Element requires following **Variable Types**"
# icksSpecification.setDescription: "Click to select ticks"
# icksSpecification.setTicks: "Set Ticks"
# icksSpecification.timePicker: "Select ticks"
# imeSpecification.getDescription: "Click to select time"
# imeSpecification.setTime: "Set Time"
# imeSpecification.timePicker: "Select a time"
# InterfaceEditor.descriptionButton.action.title.main: "New Interface Description"
# InterfaceEditor.descriptionButton.action.title.sub: "Type in a new description"
# InterfaceEditor.descriptionButton.lore.click: "Click to **set** description"
# InterfaceEditor.descriptionButton.lore.currentDescription: "Current Description"
# InterfaceEditor.descriptionButton.name: "Description"
# InterfaceEditor.getTopItems.lore.shiftLeftClick: "**Shift + Left Click** to edit button stack"
# InterfaceEditor.getTopItems.scriptCooldownBypassPermission: "Required Permission (to bypass the Cooldown):"
# InterfaceEditor.getTopItems.scriptHasCooldown: "Script Cooldown (To be executed again)"
# InterfaceEditor.iconButton.action.customModelId.title.sub: "Type in custom model id"
# InterfaceEditor.iconButton.action.example: "Example: **0** or **215**"
# InterfaceEditor.iconButton.action.notAValidNumber: "Not a valid number"
# InterfaceEditor.iconButton.durability.title.sub: "Type in durability value"
# InterfaceEditor.iconButton.lore.customModelId: "Custom Model ID"
# InterfaceEditor.iconButton.lore.damageValue: "Damage Value"
# InterfaceEditor.iconButton.lore.durability: "Durability"
# InterfaceEditor.iconButton.lore.leftClick: "**Left Click** to **change** icon"
# InterfaceEditor.iconButton.lore.rightClick: "**Right Click** to **change** custom model data"
# InterfaceEditor.iconButton.lore.shiftLeftClick: "**Shift + Left Click** to **change** damage value"
# InterfaceEditor.iconButton.name: "Icon"
# InterfaceEditor.interfaceNameButton.action.title.main: "New Interface Name"
# InterfaceEditor.interfaceNameButton.action.title.sub: "Type in a new Interface Name"
# InterfaceEditor.titleButton.action.title.main: "New Title"
# InterfaceEditor.titleButton.action.title.sub: "Type in a new Title"
# InterfaceListView.interface.loreDescription: "Description"
# InterfaceListView.reorder.action: "Click to modify the order"
# InterfaceListView.reorder.title: "Change Order"
# InterfaceReorderView.entry.deselectAction: "**Left Click** to **deselect** this Interface"
# InterfaceReorderView.entry.grabAction: "**Left Click** to **grab** this Interface"
# InterfaceReorderView.entry.swapAction: "**Left Click** to swap with **%interface%**"
# InterfaceReorderView.interface.loreButton: "Buttons:"
# InterfaceReorderView.interface.loreButton.none: "None"
# InterfaceReorderView.interface.loreDescription: "Description"
# InterfaceReorderView.interface.loreStatus: "Status"
# InterfaceReorderView.interface.loreStatus.disabled: "Disabled"
# InterfaceReorderView.interface.loreStatus.enabled: "Enabled"
# InterfaceReorderView.interface.loreTitle: "Title"
# ItemEditor.itemImportOptionsButton.lore.desc1: "Define which attributes of this button should"
# ItemEditor.itemImportOptionsButton.lore.desc2: "get overridden by importing an new item from"
# ItemEditor.itemImportOptionsButton.lore.desc3: "your inventory by clicking on it"
# ItemEditor.itemImportOptionsButton.lore.leftClick: "**Left Click** to %action% overriding **name**"
# ItemEditor.itemImportOptionsButton.lore.rightClick: "**Right Click** to %action% overriding **amount**"
# ItemEditor.itemImportOptionsButton.lore.shiftLeftClick: "**Shift + Left Click** to %action% overriding **lore**"
# ItemEditor.itemImportOptionsButton.lore.shiftRightClick: "**Shift + Right Click** to %action% overriding **custom meta data**"
# ItemEditor.itemImportOptionsButton.name: "Item Import Options"
# ItemEditor.materialButton.action.customModelId.customModelId: "Custom Model ID"
# ItemEditor.materialButton.action.customModelId.title.sub: "Type in custom model id"
# ItemEditor.materialButton.action.example: "Example: **0** or **215**"
# ItemEditor.materialButton.action.notAValidNumber: "Not a valid number"
# ItemEditor.materialButton.durability.title.sub: "Type in durability value"
# ItemEditor.materialButton.lore.currentCustomModelId: "Current Custom Model ID"
# ItemEditor.materialButton.lore.currentDamageValue: "Current Damage Value"
# ItemEditor.materialButton.lore.durability: "Durability"
# ItemEditor.materialButton.lore.pressQ: "**Press Q** to reset item meta data"
# ItemEditor.materialButton.lore.rightClick: "**Right Click** to **change** damage value"
# ItemEditor.materialButton.lore.shiftRightClick: "**Shift + Right Click** to **change** custom model data"
# ItemEditor.placeholderButton.equalValue.userInput.title.main: "Set Equal Value"
# ItemEditor.placeholderButton.equalValue.userInput.title.sub: "Type in a equal value"
# ItemEditor.placeholderButton.lore.click.addEqualValue: "**add** equal value"
# ItemEditor.placeholderButton.lore.click.addPlaceholder: "**add** placeholder"
# ItemEditor.placeholderButton.lore.click.removeEqualValue: "**remove** equal value"
# ItemEditor.placeholderButton.lore.click.removePlaceholder: "**remove** placeholder"
# ItemEditor.placeholderButton.lore.desc1: "Define which value the set placeholder"
# ItemEditor.placeholderButton.lore.desc2: "needs to equal for showing this item"
# ItemEditor.placeholderButton.lore.equalValue: "Equal Value"
# ItemEditor.placeholderButton.lore.leftClick: "**Left Click** to %action%"
# ItemEditor.placeholderButton.lore.rightClick: "**Right Click** to %action%"
# ItemEditor.placeholderButton.name: "Placeholder"
# ItemEditor.placeholderButton.placeholder.userInput.title.main: "Set Placeholder"
# ItemEditor.placeholderButton.placeholder.userInput.title.sub: "Type in a placeholder"
# ItemEditor.scriptButton.lore.cooldownBypassPermission: "Required Permission (to bypass the Cooldown):"
# ItemEditor.scriptButton.timePicker.title: "Selected Time:"
# iveItem.desc1: "Give a player a specific Item Stack"
# iveItem.desc2: "Attributes will be maintained"
# iveItem.item: "Item"
# iveItem.name: "Give Item"
# iveItem.player: "Player"
# iveLevels.desc1: "Gives a specific amount"
# iveLevels.desc2: "of levels to a player"
# iveLevels.levels: "Levels"
# iveLevels.name: "Give Levels"
# iveLevels.player: "Player"
# iveMaterial.amount: "Amount"
# iveMaterial.desc1: "Give a player a specific item"
# iveMaterial.desc2: "with a specific amount"
# iveMaterial.material: "Material"
# iveMaterial.name: "Give Material"
# iveMaterial.player: "Player"
# lashSlash.desc: "Will return a slash in chat"
# lashSlash.name: "Slash Slash"
# lashSlash.value: "Value"
# layerCloseInventory.desc1: "Will close the inventory"
# layerCloseInventory.desc2: "for a specific player"
# layerCloseInventory.name: "Player Close Inventory"
# layerCloseInventory.player: "Player"
# layerCommand.command: "Command"
# layerCommand.desc1: "Will perform a specific"
# layerCommand.desc2: "command for a specific player"
# layerCommand.name: "Player Command"
# layerCommand.player: "Player"
# layerCommandIgnorePerm.command: "Command"
# layerCommandIgnorePerm.desc1: "Will perform a specific"
# layerCommandIgnorePerm.desc2: "command for a specific player"
# layerCommandIgnorePerm.desc3: "while ignoring the permission"
# layerCommandIgnorePerm.name: "Player Command (Ignore Perm)"
# layerCommandIgnorePerm.player: "Player"
# layerDeath.deadPlayer: "Dead Player"
# layerDeath.desc: "Will be executed when a player dies"
# layerDeath.name: "Player Death"
# layerFKeyPress.desc1: "Will be issued if a player"
# layerFKeyPress.desc2: "presses the F-Key"
# layerFKeyPress.name: "F-Key Press"
# layerFKeyPress.player: "Player"
# layerFoodChange.desc1: "Will be executed when the food"
# layerFoodChange.desc2: "level of a player changes"
# layerFoodChange.event: "Player"
# layerFoodChange.level: "Food Level"
# layerFoodChange.name: "Food Level Change"
# layerFoodChange.player: "Event"
# layerHasMaterial.desc1: "Detects if a player has a"
# layerHasMaterial.desc2: "certain amount of a material"
# layerHasMaterial.doesntHaveMaterial.desc1: "Will be executed if the player doesn't"
# layerHasMaterial.doesntHaveMaterial.desc2: "have the specified amount of material(s)"
# layerHasMaterial.doesntHaveMaterial.name: "Doesn't have the Material(s)"
# layerHasMaterial.hasMaterial.desc1: "Will be executed if the player"
# layerHasMaterial.hasMaterial.desc2: "has the specified amount of material(s)"
# layerHasMaterial.hasMaterial.name: "Has the Material(s)"
# layerHasMaterial.name: "Player Has Material(s)"
# layerHasPermission.desc1: "Runs one of two actions depending"
# layerHasPermission.desc2: "if a player has a certain permission"
# layerHasPermission.doesHavePermission.desc1: "Will be executed if a"
# layerHasPermission.doesHavePermission.desc2: "player has the permission"
# layerHasPermission.doesHavePermission.name: "Does have the Permission"
# layerHasPermission.doesNotHavePermission.desc1: "Will be executed if a player"
# layerHasPermission.doesNotHavePermission.desc2: "does not the permission"
# layerHasPermission.doesNotHavePermission.name: "Does not have the Permission"
# layerHasPermission.name: "Has Permission"
# layerHasPermission.permission: "Permission"
# layerHasPermission.player: "Player"
# layerJoin.desc: "Executed when a player joins the Server"
# layerJoin.name: "Player Join"
# layerJoin.player: "Player"
# layerMessage.desc: "Will be executed on a new Chat Message"
# layerMessage.event: "Event"
# layerMessage.message: "Message"
# layerMessage.name: "Player Chat Message"
# layerMessage.sender: "Sender"
# layerQuit.desc: "Executed when a player leaves the Server"
# layerQuit.name: "Player Quit"
# layerQuit.player: "Player"
# layerRemoveItem.amount: "Amount"
# layerRemoveItem.desc1: "Removes a specific amount of items"
# layerRemoveItem.desc2: "from the players inventory"
# layerRemoveItem.item: "Item"
# layerRemoveItem.name: "Remove Item from Player"
# layerRemoveItem.player: "Player"
# layerRemoveItem.removal: "Removal Success"
# layerSendActionbar.desc: "Send a player an actionbar message"
# layerSendActionbar.message: "Message"
# layerSendActionbar.name: "Player Actionbar Message"
# layerSendActionbar.player: "Player"
# layerSendMessage.desc: "Send a message to a specific player"
# layerSendMessage.message: "Message"
# layerSendMessage.name: "Player Message"
# layerSendMessage.player: "Player"
# layerSendTitle.desc: "Send a specific title to a player"
# layerSendTitle.fadeIn: "Fade In"
# layerSendTitle.fadeOut: "Fade Out"
# layerSendTitle.name: "Send Player Title"
# layerSendTitle.player: "Player"
# layerSendTitle.stay: "Stay"
# layerSendTitle.subTitle: "Sub Title"
# layerSendTitle.title: "Title"
# layerSetFood.desc1: "Sets the food-level of the"
# layerSetFood.desc2: "player 20 is the max amount"
# layerSetFood.foodLevel: "Food Level"
# layerSetFood.name: "Set Food"
# layerSetFood.player: "Player"
# layerSetHealth.desc1: "Sets the amount of health that the"
# layerSetHealth.desc2: "player has Measured in half-hearts"
# layerSetHealth.health: "Health"
# layerSetHealth.name: "Set Health"
# layerSetHealth.player: "Player"
# layerSetVelocity.desc1: "Will throw the player"
# layerSetVelocity.desc2: "based on a specific vector"
# layerSetVelocity.name: "Set Velocity"
# layerSetVelocity.thrownPlayer: "Thrown Player"
# layerSetVelocity.xAxis: "X Axis"
# layerSetVelocity.yAxis: "Y Axis"
# layerSetVelocity.zAxis: "Z Axis"
# laySound.desc1: "Plays a specific sound"
# laySound.desc2: "for a specific player"
# laySound.name: "Play Sound"
# laySound.player: "Player"
# laySound.sound: "Sound"
# learInventory.desc: "Clears the whole Inventory of a Player"
# learInventory.name: "Clear Inventory"
# learInventory.player: "Player"
# lement.argumentDesc: "from"
# lement.argumentTitle: "Arguments"
# lement.variableDescription: "Created Variables"
# lementSetup.createAValue: "Create a Value"
# lockBreak.brokenBlock: "Broken Block"
# lockBreak.desc1: "Will be executed when a"
# lockBreak.desc2: "player breaks a block"
# lockBreak.event: "Event"
# lockBreak.name: "Block Break"
# lockBreak.player: "Player"
# lockGetMaterial.block: "Block"
# lockGetMaterial.desc1: "Will retrieve the Material"
# lockGetMaterial.desc2: "of a specific Block"
# lockGetMaterial.material: "Material"
# lockGetMaterial.name: "Get Material of Block"
# lockPicker.title: "Left Click a Block to select it"
# lockPlace.desc1: "Will be executed when a"
# lockPlace.desc2: "player places a block"
# lockPlace.event: "Event"
# lockPlace.name: "Block Place"
# lockPlace.placedBlock: "Placed Block"
# lockPlace.player: "Player"
# lockRightClick.clickedBlock: "Clicked Block"
# lockRightClick.desc1: "Will be issued if a specific"
# lockRightClick.desc2: "Block has been right clicked"
# lockRightClick.name: "Right Click on Block"
# lockRightClick.player: "Player"
# lockSetMaterial.block: "Block"
# lockSetMaterial.desc: "Change the Material of a Block"
# lockSetMaterial.material: "New Material"
# lockSetMaterial.name: "Set Material of Block"
# lockSpecification.desc1: "You will be able to select the"
# lockSpecification.desc2: "block by left clicking on it"
# lockSpecification.location: "Block at"
# lockSpecification.title: "Pick Block"
# ltraEconomyAddBalance.amount: "Amount"
# ltraEconomyAddBalance.currency: "Currency"
# ltraEconomyAddBalance.desc1: "Add to a player's balance"
# ltraEconomyAddBalance.desc2: "using a certain currency"
# ltraEconomyAddBalance.name: "UltraEconomy Add to Balance"
# ltraEconomyAddBalance.player: "Player"
# ltraEconomyGetBalance.balance: "Balance"
# ltraEconomyGetBalance.currency: "Currency"
# ltraEconomyGetBalance.desc1: "Get a player's balance"
# ltraEconomyGetBalance.desc2: "using a certain currency"
# ltraEconomyGetBalance.name: "UltraEconomy Get Balance"
# ltraEconomyGetBalance.player: "Player"
# ltraEconomyHasBalance.amount: "Amount"
# ltraEconomyHasBalance.currency: "Currency"
# ltraEconomyHasBalance.desc1: "Returns if a player has"
# ltraEconomyHasBalance.desc2: "enough money using a"
# ltraEconomyHasBalance.desc3: "certain currency"
# ltraEconomyHasBalance.hasBalance: "Has Balance"
# ltraEconomyHasBalance.name: "UltraEconomy Has Balance"
# ltraEconomyHasBalance.player: "Player"
# ltraEconomyRemoveBalance.amount: "Amount"
# ltraEconomyRemoveBalance.currency: "Currency"
# ltraEconomyRemoveBalance.desc1: "Remove from a player's balance"
# ltraEconomyRemoveBalance.desc2: "using a certain currency"
# ltraEconomyRemoveBalance.name: "UltraEconomy Remove from Balance"
# ltraEconomyRemoveBalance.player: "Player"
# ltraRegionsIsInsideRegion.desc1: "Returns if a player is"
# ltraRegionsIsInsideRegion.desc2: "inside a specific region"
# ltraRegionsIsInsideRegion.isInsideRegion: "Is Inside Region"
# ltraRegionsIsInsideRegion.name: "UltraRegions Is Inside Region"
# ltraRegionsIsInsideRegion.player: "Player"
# ltraRegionsIsInsideRegion.region: "Region"
# nlinePlayerPicker.lore: "Click to select"
# nlinePlayerSelector.chooser: "Chooser"
# nlinePlayerSelector.desc1: "Will open a GUI with"
# nlinePlayerSelector.desc2: "all online players"
# nlinePlayerSelector.guiTitle: "GUI Title"
# nlinePlayerSelector.name: "Online Player Selector"
# nlinePlayerSelector.selectedPlayerName: "Selected Player"
# nstalledAddonsView.gui.title: "Addons > Installed"
# nstalledAddonsView.lore.addon.deleted: "This addon has been deleted!"
# nstalledAddonsView.lore.addon.description: "Description:"
# nstalledAddonsView.lore.addon.error.line1: "An error occurred while trying to load this addon,"
# nstalledAddonsView.lore.addon.error.line2: "Please contact the addon author!"
# nstalledAddonsView.lore.addon.installed: "This addon is **installed** and is currently **running**"
# nstalledAddonsView.lore.addon.installedFromCloud: "This addon was installed from the Cloud"
# nstalledAddonsView.lore.addon.notFoundInCloud: "This addon could not be found in the Cloud"
# nstalledAddonsView.lore.addon.requirement: "This addon requires **%requirement%** to load"
# nstalledAddonsView.lore.pressQ: "**Press Q** to **delete**"
# nterfaceChooser.lore: "Click to **select**"
# nterfaceChooser.title: "GUI"
# nterfaceCommand.interfaceNotFound: "Couldn't find an interface with the name **%interfaceName%**"
# nterfaceEditor.decreaseRowButton.lore: "Click to remove a row"
# nterfaceEditor.decreaseRowButton.title: "Remove Row"
# nterfaceEditor.getTopItems.deletionConfirm: "Confirm deletion of this Button"
# nterfaceEditor.getTopItems.hasPermission: "Required Permission (to show)"
# nterfaceEditor.getTopItems.lore.emptySlot: "Please click on an empty slot"
# nterfaceEditor.getTopItems.lore.leftClick: "**Left Click** to edit"
# nterfaceEditor.getTopItems.lore.pressQ: "**Press Q** to **delete**"
# nterfaceEditor.getTopItems.lore.rightClick: "**Right Click** to **move**/**copy**"
# nterfaceEditor.getTopItems.lore.shiftRightClick: "**Shift + Right Click** to add another item"
# nterfaceEditor.increaseRowButton.lore: "Click to add a row"
# nterfaceEditor.increaseRowButton.title: "Add Row"
# nterfaceEditor.title.emptySlot: "Click empty slot to add item"
# nterfaceEditor.title.guiAction: "Move (Left Click) or Copy (Right Click)"
# nterfaceEditor.title.guiNull: "Loading..."
# nterfaceEditor.titleButton.desc1: "Click to change the Title"
# nterfaceEditor.titleButton.desc2: "Current"
# nterfaceEditor.titleButton.name: "Change Title"
# nterfaceItem.click: "Click"
# nterfaceItem.unnamedItem: "Unnamed Item"
# nterfaceListView.createGui.button: "Create"
# nterfaceListView.createGui.interface.desc1: "**Interface Name** **(1/2)**"
# nterfaceListView.createGui.interface.desc2: "Type in the name of the GUI"
# nterfaceListView.createGui.lore: "Click to create new GUI"
# nterfaceListView.createGui.title.desc1: "**Title** **(2/2)**"
# nterfaceListView.createGui.title.desc2: "Type in the title of the GUI"
# nterfaceListView.guiTitle: "Interfaces"
# nterfaceListView.interface.confirmDeletion: "Confirm deletion of"
# nterfaceListView.interface.loreButton: "Buttons:"
# nterfaceListView.interface.loreButton.none: "None"
# nterfaceListView.interface.loreDelete: "**Press Q** to delete"
# nterfaceListView.interface.loreEditGui: "**Left Click** to edit GUI"
# nterfaceListView.interface.loreGuiToggle.desc: "**Shift + Left Click** to"
# nterfaceListView.interface.loreGuiToggle.disabled: "disable"
# nterfaceListView.interface.loreGuiToggle.enabled: "enable"
# nterfaceListView.interface.loreOpenGui: "**Right Click** to open / test GUI"
# nterfaceListView.interface.loreStatus: "Status"
# nterfaceListView.interface.loreStatus.disabled: "Disabled"
# nterfaceListView.interface.loreStatus.enabled: "Enabled"
# nterfaceListView.interface.loreTitle: "Title"
# nterfaceSpecification.description: "Select from your created GUI's"
# nterfaceSpecification.title: "Select GUI"
# olderImportView.button.lore.click: "Click to import from this file"
# olderImportView.gui.title: "Import > Showing .folder files"
# olderImportView.input.title.main: "Folder Name"
# olderImportView.input.title.sub: "Type in a name for your folder"
# olderOptionsView.deleteButton.confirmDeletion: "Confirm deletion of '%folderName%'"
# olderOptionsView.deleteButton.lore.click: "Click to delete folder"
# olderOptionsView.deleteButton.lore.description.firstLine: "This will delete the entire folder"
# olderOptionsView.deleteButton.lore.description.secondLine: "which may contain your GUI's, Commands"
# olderOptionsView.deleteButton.lore.description.thirdLine: "Interfaces and Scripts"
# olderOptionsView.deleteButton.name: "Delete"
# olderOptionsView.exportButton.input.successfullyExported: "Successfully exported the folder to **%exportPath%**"
# olderOptionsView.exportButton.input.title.main: "Export %folderName%"
# olderOptionsView.exportButton.input.title.sub: "Type in a file name"
# olderOptionsView.exportButton.lore.click: "Click to export"
# olderOptionsView.exportButton.lore.description.firstLine: "Export the entire folder as"
# olderOptionsView.exportButton.lore.description.secondLine: "a file to share it with others"
# olderOptionsView.exportButton.name: "Export"
# olderOptionsView.gui.title: "Folder"
# olderOptionsView.iconsButton.icon: "Icon"
# olderOptionsView.iconsButton.lore: "Click to change the icon"
# olderOptionsView.iconsButton.name: "Icon"
# olderOptionsView.nonDeletableButton.lore.firstLine: "You cannot delete this folder"
# olderOptionsView.nonDeletableButton.lore.secondLine: "Create a different folder first"
# olderOptionsView.nonDeletableButton.lore.thirdLine: "before deleting this one"
# olderOptionsView.nonDeletableButton.name: "Delete"
# olderOptionsView.renameButton.input.title.actionbar: "Current Name: **%folderName%**"
# olderOptionsView.renameButton.input.title.main: "Rename Folder"
# olderOptionsView.renameButton.input.title.sub: "Type in a folder name in chat"
# olderOptionsView.renameButton.lore.click: "Click to rename this folder"
# olderOptionsView.renameButton.lore.currentName: "Current Name: **%folderName%**"
# olderOptionsView.renameButton.name: "Rename"
# ommand.argument: "Arguments"
# ommand.command: "Command"
# ommand.desc1: "Will be issued if a specific"
# ommand.desc2: "command has been run by a player"
# ommand.infoDesc: "Command"
# ommand.name: "Command"
# ommand.sender: "Sender"
# ompareItem.desc1: "Will check if two"
# ompareItem.desc2: "items are the same"
# ompareItem.firstItem: "First Item"
# ompareItem.name: "CompCancelVanillaBehaviorare Item"
# ompareItem.result: "Result"
# ompareItem.secondItem: "Second Item"
# ompareMaterial.desc1: "Will check if two"
# ompareMaterial.desc2: "materials are the same"
# ompareMaterial.firstMaterial: "First Material"
# ompareMaterial.name: "Compare Material"
# ompareMaterial.result: "Result"
# ompareMaterial.secondMaterial: "Second Material"
# ompareString.desc1: "Will check if two Strings"
# ompareString.desc2: "contain the same"
# ompareString.firstString: "First String"
# ompareString.name: "Compare String"
# ompareString.result: "Result"
# ompareString.secondString: "Second String"
# onsoleCommand.command: "Command"
# onsoleCommand.desc1: "Will perform a specific"
# onsoleCommand.desc2: "command on the console"
# onsoleCommand.name: "Console Command"
# OpenGUIFromAllFolders.desc1: "Will open a specific GUI from all"
# OpenGUIFromAllFolders.desc2: "Folders for a specific player"
# OpenGUIFromAllFolders.gui: "GUI"
# OpenGUIFromAllFolders.name: "Open GUI (From all Folders)"
# OpenGUIFromAllFolders.player: "Player"
# oundPicker.desc1: "**Left Click** to select this sound"
# oundPicker.desc2: "**Right Click** to play this sound"
# oundPicker.title: "Select Sending Sound"
# oundSpecification.description: "Click to select a sound"
# oundSpecification.title: "Select Sound"
# penGUI.desc1: "Will open a specific GUI"
# penGUI.desc2: "for a specific player"
# penGUI.gui: "GUI"
# penGUI.name: "Open GUI"
# penGUI.player: "Player"
# reaterThan.desc1: "Returns true or false depending"
# reaterThan.desc2: "if the num 2 is greater than num 1"
# reaterThan.desc3: "Num1 < Num2"
# reaterThan.false: "False"
# reaterThan.false.desc1: "Will be executed if num 2"
# reaterThan.false.desc2: "is not greater than num 1"
# reaterThan.name: "Greater Than"
# reaterThan.number1: "Number 1"
# reaterThan.number2: "Number 2"
# reaterThan.true: "True"
# reaterThan.true.desc1: "Will be executed if num 2"
# reaterThan.true.desc2: "is greater than num 1"
# reaterThanOrEqual.desc1: "Returns true or false depending"
# reaterThanOrEqual.desc2: "if the value is greater than or equal to"
# reaterThanOrEqual.desc3: "Num1 <= Num2"
# reaterThanOrEqual.false: "False"
# reaterThanOrEqual.false.desc1: "Will be executed if num 2"
# reaterThanOrEqual.false.desc2: "equal to num 1"
# reaterThanOrEqual.false.desc3: "is not greater than or"
# reaterThanOrEqual.name: "Greater Than or Equal To"
# reaterThanOrEqual.number1: "Number 1"
# reaterThanOrEqual.number2: "Number 2"
# reaterThanOrEqual.true: "True"
# reaterThanOrEqual.true.desc1: "Will be executed if num 2"
# reaterThanOrEqual.true.desc2: "equal to num 1"
# reaterThanOrEqual.true.desc3: "is greater than or"
# RecipeFeatureListView.craftingRecipeButton.craftingRecipes: "Crafting Recipes"
# RecipeFeatureListView.craftingRecipeButton.lore.leftClick: "**Left Click** to view"
# RecipeFeatureListView.craftingRecipeButton.name: "Custom Crafting Recipes"
# RecipeFeatureListView.none: "None"
# rgumentMatcher.gui.title: "Argument > %argument% > Value"
# rgumentMatcher.model.createArgument: "Create a Value"
# rgumentMatcher.model.lore.click: "Click to select"
# rgumentMatcher.model.lore.created: "Created by **%elementName%**"
# rgumentMatcher.model.lore.insert: "Insert this Variable as a Value"
# rgumentMatcher.model.specified.lore.click: "Click to create"
# rgumentsGet.argument: "Arguments"
# rgumentsGet.argumentNumber: "Argument Number"
# rgumentsGet.desc1: "Retrieves the Argument and returns"
# rgumentsGet.desc2: "nothing if there isn't an argument"
# rgumentsGet.name: "Get Argument by Number"
# rgumentsGet.value: "Value"
# rgumentsGetFirst.argument: "Arguments"
# rgumentsGetFirst.desc1: "Retrieves the first argument from a command"
# rgumentsGetFirst.desc2: "will return nothing if there isn't an argument"
# rgumentsGetFirst.name: "Get First Argument"
# rgumentsGetFirst.value: "Value"
# rgumentsGetString.argument: "Arguments"
# rgumentsGetString.desc1: "Get all arguments as a string"
# rgumentsGetString.desc2: "combined with a space and returns"
# rgumentsGetString.desc3: "nothing if there isn't an argument"
# rgumentsGetString.name: "Get All Arguments As String"
# rgumentsGetString.value: "Value"
# rgumentsHas.argument: "Arguments"
# rgumentsHas.desc: "Check if there are Arguments provided by a command"
# rgumentsHas.name: "Has Arguments"
# rgumentsHas.result: "Result"
# ripleRandomElement.desc: "33% of being executed"
# ripleRandomElement.desc1: "Will execute a random out"
# ripleRandomElement.desc2: "of 3 connected elements"
# ripleRandomElement.element1: "1
# ripleRandomElement.element2: "2
# ripleRandomElement.element3: "3
# ripleRandomElement.name: "Random Element (30%)"
# roadcast.desc: "Sends a message to all players"
# roadcast.message: "Message"
# roadcast.name: "Broadcast"
# ScriptBrowser.button.element.action.shiftLeftClick.title.main: "New Script Nane"
# ScriptBrowser.button.element.action.shiftRightClick.title.main: "New Command Description"
# ScriptBrowser.button.element.lore.shiftRightClick: "**Shift + Right Click** to set description"
# ScriptBrowser.button.element.shiftLeftClick.title.sub: "Type in a new Script Name"
# ScriptBrowser.button.element.shiftRightClick.title.sub: "Type in a new description"
# ScriptBrowser.button.lore.description: "Description"
# ScriptCommandListView.action.shiftRightClick.title.main: "New Command Description"
# ScriptCommandListView.action.shiftRightClick.title.sub: "Type in a new description"
# ScriptCommandListView.lore.cooldownBypassPermission: "Required Permission (to bypass the Cooldown):"
# ScriptCommandListView.lore.currentCooldown: "Current Cooldown:"
# ScriptCommandListView.lore.description: "Description"
# ScriptCommandListView.lore.shiftLeftClick: "**Shift + Left Click** to set **cooldown**"
# ScriptCommandListView.lore.shiftRightClick: "**Shift + Right Click** to set description"
# serNumberInput.desc1: "Will open a Number Picker GUI"
# serNumberInput.desc2: "for the Player to select a Number"
# serNumberInput.input: "Input"
# serNumberInput.name: "Number User Input"
# serNumberInput.player: "Player"
# serNumberInput.shortTitle: "Short-Title"
# serTextInput.desc1: "Will prompt the player"
# serTextInput.desc2: "to input text in chat"
# serTextInput.input: "Input"
# serTextInput.name: "Text User Input"
# serTextInput.player: "Player"
# serTextInput.subTitle: "Sub Title"
# serTextInput.title: "Title"
# sOnline.desc: "Checks if the player is online"
# sOnline.false: "False"
# sOnline.false.desc: "Will be executed if player isn't online"
# sOnline.name: "Player Online"
# sOnline.playerName: "Player Name"
# sOnline.true: "True"
# sOnline.true.desc: "Will be executed if player is online"
# temEditor.amountButton.lore.amount: "Amount"
# temEditor.amountButton.lore.leftClick: "**Left Click** to increase"
# temEditor.amountButton.lore.rightClick: "**Right Click** to decrease"
# temEditor.amountButton.name: "Change Amount"
# temEditor.loreButton.lore.cursor.leftClick: "**Left Click** to edit **selected** line"
# temEditor.loreButton.lore.cursor.pressQ: "**Press Q** to select **next line**"
# temEditor.loreButton.lore.cursor.rightClick: "**Right Click** to remove **selected** line"
# temEditor.loreButton.lore.leftClick: "**Left Click** to add line"
# temEditor.loreButton.lore.lore: "Lore"
# temEditor.loreButton.lore.pressQ: "**Press Q** to enable the **cursor**"
# temEditor.loreButton.lore.selected: "Selected"
# temEditor.loreButton.name: "Edit Lore"
# temEditor.loreButton.userInput.cursor.title.main: "Add Lore Line"
# temEditor.loreButton.userInput.previous: "Previous"
# temEditor.loreButton.userInput.title.main: "Edit Lore Line"
# temEditor.loreButton.userInput.title.sub: "Type in a line"
# temEditor.materialButton.lore.click: "**Left Click** to change Material"
# temEditor.materialButton.lore.currentMaterial: "Current Material"
# temEditor.materialButton.materialPicker.title: "GUI-Item > Material"
# temEditor.materialButton.name: "Change Material"
# temEditor.permissionButton.lore.click: "Click to %action%"
# temEditor.permissionButton.lore.click.addPermission: "**add** permission"
# temEditor.permissionButton.lore.click.removePermission: "**remove** permission"
# temEditor.permissionButton.name: "Permission"
# temEditor.permissionButton.userInput.title.main: "Set Permission"
# temEditor.permissionButton.userInput.title.sub: "Type in a permission"
# temEditor.renameButton.lore.click: "Click to rename button"
# temEditor.renameButton.lore.currentName: "Current Name:"
# temEditor.renameButton.name: "Rename"
# temEditor.renameButton.userInput.title.sub: "Type in a new name"
# temEditor.scriptButton.lore: "Click to show Script"
# temEditor.scriptButton.name: "Script"
# temEditor.title: "Editing Item"
# temPicker.title: "Choose"
# temRightClick.desc1: "Will be executed whenever a player"
# temRightClick.desc2: "right clicks a specific item"
# temRightClick.event: "Event"
# temRightClick.itemStack: "Item Stack"
# temRightClick.name: "Item Right Click"
# temRightClick.player: "Player"
# temSpecification.description: "Open Inventory to select an Item"
# temSpecification.selectedItem: "Selected Item"
# temSpecification.title: "Select Item"
# torageTypePickerView.gui.title: "Choose a Storage Location"
# torageTypePickerView.localButton.lore.click: "Click to **choose**"
# torageTypePickerView.localButton.lore.description.firstLine: "Your folder will only be available"
# torageTypePickerView.localButton.lore.description.secondLine: "on this Server"
# torageTypePickerView.localButton.name: "Local Storage"
# torageTypePickerView.mysqlButton.description.firstLine: "Your folder will be available"
# torageTypePickerView.mysqlButton.description.secondLine: "on all your Servers with"
# torageTypePickerView.mysqlButton.description.thirdLine: "MySQL enabled"
# torageTypePickerView.mysqlButton.lore.click: "Click to **choose**"
# torageTypePickerView.mysqlButton.name: "MySQL"
# tringSpecification.desc1: "Type in a new String optionally"
# tringSpecification.desc2: "mixed with other Variables"
# tringSpecification.title: "Type in"
# tringSpecification.variables: "Available Variables"
# UIButtonClick.clickType: "Click Type"
# UIButtonClick.desc1: "Will be executed when clicking"
# UIButtonClick.desc2: "a specific GUI Button"
# UIButtonClick.infoDescription.desc1: "Assigned to"
# UIButtonClick.infoDescription.desc2: "in the GUI called"
# UIButtonClick.itemID: "ItemId"
# UIButtonClick.name: "GUI Button Click"
# UIButtonClick.player: "Player"
# umberChooser.add.leftClick: "**Left Click** to add **1**"
# umberChooser.add.rightClick: "**Right Click** to add **10**"
# umberChooser.add.shiftLeftClick: "**Shift + Left Click** to add **100**"
# umberChooser.add.shiftRightClick: "**Shift + Right Click** to add **1000**"
# umberChooser.buttonLore: "Click to confirm"
# umberChooser.buttonTitle: "Confirm"
# umberChooser.decrease: "Decrease"
# umberChooser.increase: "Increase"
# umberChooser.remove.leftClick: "**Left Click** to remove **1**"
# umberChooser.remove.rightClick: "**Right Click** to remove **10**"
# umberChooser.remove.shiftLeftClick: "**Shift + Left Click** to remove **100**"
# umberChooser.remove.shiftRightClick: "**Shift + Right Click** to remove **1000**"
# umberChooser.typeIn.action: "Type in a value"
# umberChooser.typeIn.lore: "**Click** to type in a value"
# umberChooser.typeIn.title: "Type In"
# umberSpecification.title: "Select Number"
# umberToText.desc: "Converts a Number Variable to Text Variable"
# umberToText.name: "Number To Text"
# umberToText.number: "Number"
# umberToText.text: "Text"
# verview.addonsButton.lore.click: "Click to show Addons"
# verview.addonsButton.lore.description.firstLine: "Addons can extend the"
# verview.addonsButton.lore.description.secondLine: "functionality of Ultra Customizer"
# verview.addonsButton.lore.description.thirdLine: "by adding additional Elements."
# verview.addonsButton.name: "Addons"
# verview.commandsButton.description.firstLine: "Create your own Commands"
# verview.commandsButton.description.secondLine: "with Scripts that can do"
# verview.commandsButton.description.thirdLine: "anything you can imagine"
# verview.commandsButton.lore.click: "Click to show Commands"
# verview.commandsButton.lore.commands: "Commands:"
# verview.commandsButton.lore.none: "None"
# verview.commandsButton.name: "Commands"
# verview.folderButton.lore.click: "Click to see **options**"
# verview.folderButton.lore.description.firstLine: "Store your GUI's, Scripts and"
# verview.folderButton.lore.description.fourthLine: "and share your creations"
# verview.folderButton.lore.description.secondLine: "Interfaces within a folder."
# verview.folderButton.lore.description.thirdLine: "This allows you to later export"
# verview.folderButton.lore.selectedFolder: "This folder is **currently selected**"
# verview.importFolderButton.lore: "Click to import folder"
# verview.importFolderButton.name: "Import Folder"
# verview.interfacesButton.lore.button: "Button"
# verview.interfacesButton.lore.buttons: "Buttons"
# verview.interfacesButton.lore.click: "Click to show GUIs"
# verview.interfacesButton.lore.description.firstLine: "Create awesome intuitive interfaces"
# verview.interfacesButton.lore.description.secondLine: "to offer an easy way to interact"
# verview.interfacesButton.lore.description.thirdLine: "with your Server"
# verview.interfacesButton.lore.interfaces: "Interfaces:"
# verview.interfacesButton.lore.none: "None"
# verview.interfacesButton.name: "GUIs"
# verview.messagesButton.lore.click: "Click to show Messages"
# verview.messagesButton.lore.edited: "Edited"
# verview.messagesButton.lore.messages: "Messages:"
# verview.messagesButton.lore.none: "None"
# verview.messagesButton.lore.unmodified: "Unmodified"
# verview.messagesButton.name: "Edited Messages"
# verview.messagesNoProtocollibButton: "Edited Messages"
# verview.messagesNoProtocollibButton.lore.install: "Install **ProtocolLib** to"
# verview.messagesNoProtocollibButton.lore.unavailable: "This feature is currently unavailable"
# verview.messagesNoProtocollibButton.lore.use: "use this feature"
# verview.newFolderButton.input.title.main: "Folder Name"
# verview.newFolderButton.input.title.sub: "Type in a name for your folder"
# verview.newFolderButton.lore: "Click to create Folder"
# verview.newFolderButton.name: "Create Folder"
# verview.scriptsButton.lore.click: "Click to show Scripts"
# verview.scriptsButton.lore.description.firstLine: "Create small features"
# verview.scriptsButton.lore.description.secondLine: "yourself by making a script"
# verview.scriptsButton.lore.none: "None"
# verview.scriptsButton.lore.scripts: "Scripts:"
# verview.scriptsButton.name: "Scripts"
# verview.settingsButton.lore: "Click to show Settings"
# verview.settingsButton.name: "Settings"
# verview.skipButton.lore.click: "Click to show %key% folder"
# verview.skipButton.lore.click.next: "next"
# verview.skipButton.lore.click.previous: "previous"
# verview.skipButton.name.next: "Next"
# verview.skipButton.name.previous: "Previous"
# xecuteForAllPlayers.allPlayers: "All Players"
# xecuteForAllPlayers.connectors.desc1: "All of the next Elements"
# xecuteForAllPlayers.connectors.desc2: "will be executed for every player"
# xecuteForAllPlayers.desc1: "for every online player."
# xecuteForAllPlayers.desc2: "Will execute all following Elements"
# xecuteForAllPlayers.name: "Execute for all Players"
# xecuteForAllPlayers.nextElements: "Next Elements"